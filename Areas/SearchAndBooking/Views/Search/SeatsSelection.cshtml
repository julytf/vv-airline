@using System.Linq
@using vv_airline.Models.Data
@using vv_airline.Areas.SearchAndBooking.Models
@using vv_airline.Areas.SearchAndBooking.Models.searchAndBookingService
@using vv_airline.Models.Enums

@model vv_airline.Areas.SearchAndBooking.Models.SeatSelectionModel

@Html.Partial("Partials/_NavBar.cshtml")

@{
    vv_airline.Models.Data.SeatMap seatMap = ViewBag.seatMap;
}

@* <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
<script type="text/javascript">
$(document).ready(function () {
$('.selectpicker').select2();
});
</script> *@

<form method="post">
    <div class="mx-auto max-w-6xl px-4 py-12 sm:px-6 sm:py-16 lg:px-8">
        <ul class="relative z-0">
            <li class="inline-block">
                <button name="action" value="toGoLeg1"
                    class="border-solid border-2 rounded-md p-6 pt-2 -mb-4 inline-block @(Model.Turn == SeatSelectionModel.TurnEnum.Go && Model.Leg == SeatSelectionModel.LegEnum.One ? " border-primary bg-sky-200" : "")">
                    <div class="block">
                        <div class="w-full text-lg font-semibold">
                            @ViewBag.goSchedule.Flights[0].FlightRoute.DepartureAirport.Name
                            <div class="text-sm inline">đến</div>
                            @ViewBag.goSchedule.Flights[0].FlightRoute.DestinationAirport.Name
                        </div>
                    </div>
                </button>
            </li>
            @if (@ViewBag.goSchedule.HasTransit)
            {

                <li class="inline-block">
                    <button name="action" value="toGoLeg2"
                        class="border-solid border-2 rounded-md p-6 pt-2 -mb-4 inline-block @(Model.Turn == SeatSelectionModel.TurnEnum.Go && Model.Leg == SeatSelectionModel.LegEnum.Two ? " border-primary bg-sky-200" : "")">
                        <div class="block">
                        <div class="w-full text-lg font-semibold">
                            @ViewBag.goSchedule.Flights[1].FlightRoute.DepartureAirport.Name
                            <div class="text-sm inline">đến</div>
                            @ViewBag.goSchedule.Flights[1].FlightRoute.DestinationAirport.Name
                        </div>
                        </div>
                    </button>
                </li>
            }
            @if (@ViewBag.search.IsRoundtrip)
            {

                <li class="inline-block ml-6">
                    <button name="action" value="toReturnLeg1"
                        class="border-solid border-2 rounded-md p-6 pt-2 -mb-4 inline-block @(Model.Turn == SeatSelectionModel.TurnEnum.Return && Model.Leg == SeatSelectionModel.LegEnum.One ? " border-primary bg-sky-200" : "")">
                        <div class="block">
                        <div class="w-full text-lg font-semibold">
                            @ViewBag.returnSchedule.Flights[0].FlightRoute.DepartureAirport.Name
                            <div class="text-sm inline">về</div>
                            @ViewBag.returnSchedule.Flights[0].FlightRoute.DestinationAirport.Name
                        </div>
                        </div>
                    </button>
                </li>
                @if (@ViewBag.returnSchedule?.HasTransit)
                {

                    <li class="inline-block">
                        <button name="action" value="toReturnLeg2"
                            class="border-solid border-2 rounded-md p-6 pt-2 -mb-4 inline-block @(Model.Turn == SeatSelectionModel.TurnEnum.Return && Model.Leg == SeatSelectionModel.LegEnum.Two ? " border-primary bg-sky-200" : "")">
                            <div class="block">
                        <div class="w-full text-lg font-semibold">
                            @ViewBag.returnSchedule.Flights[1].FlightRoute.DepartureAirport.Name
                            <div class="text-sm inline">về</div>
                            @ViewBag.returnSchedule.Flights[1].FlightRoute.DestinationAirport.Name
                        </div>
                            </div>
                        </button>
                    </li>
                }
            }
        </ul>
        <div class="mx-auto border-solid border-2 border-primary rounded-md p-6 bg-white z-10 relative ">

            <input asp-for="Turn" type="hidden">
            <input asp-for="Leg" type="hidden">
            <input asp-for="PassengerType" type="hidden">
            <input asp-for="PassengerIndex" type="hidden">
            @* <input asp-for="SeatId" type="hidden"> *@

            <ul class="py-3">
                @for (int i = 0; i < ViewBag.adultPassengers.Length; i++)
                {
                    var passenger = ViewBag.adultPassengers[i];
                    <li class="mb-3">
                        <input type="radio" id="psg-a@(i)" name="PassengerIndex" class="hidden peer" required
                            onclick="choosePassengerHanlder('@PassengerEnums.Type.Adult',@(i))" @(Model.PassengerType ==
                        PassengerEnums.Type.Adult && Model.PassengerIndex == i ? "checked" : "")>
                        <label for="psg-a@(i)"
                            class="w-1/2 inline-flex items-center justify-between p-2 px-4 text-gray-500 bg-white border border-gray-200 rounded cursor-pointer dark:hover:text-gray-300 dark:border-gray-700 dark:peer-checked:text-blue-500 peer-checked:border-blue-600 peer-checked:text-blue-600 hover:text-gray-600 hover:bg-gray-100 dark:text-gray-400 dark:bg-gray-800 dark:hover:bg-gray-700">
                            <div class="w-full text-lg font-semibold flex justify-between">
                                <div>
                                    @passenger.FullName
                                </div>
                                @if (ViewBag.adultSeats[i] != null)
                                {
                                    <div>
                                        @ViewBag.adultSeats[i].Col-@ViewBag.adultSeats[i].Row
                                    </div>
                                }
                                else
                                {
                                    <div>
                                        (chưa chọn ghế)
                                    </div>
                                }
                            </div>
                        </label>
                    </li>
                }
                @for (int i = 0; i < ViewBag.childrenPassengers.Length; i++)
                {
                    var passenger = ViewBag.childrenPassengers[i];
                    <li class="mb-3">
                        <input type="radio" id="psg-c@(i)" name="PassengerIndex" class="hidden peer" required
                            onclick="choosePassengerHanlder('@PassengerEnums.Type.Child',@(i))" @(Model.PassengerType ==
                        PassengerEnums.Type.Child && Model.PassengerIndex == i ? "checked" : "")>
                        <label for="psg-c@(i)"
                            class="w-1/2 inline-flex items-center justify-between p-2 px-4 text-gray-500 bg-white border border-gray-200 rounded cursor-pointer dark:hover:text-gray-300 dark:border-gray-700 dark:peer-checked:text-blue-500 peer-checked:border-blue-600 peer-checked:text-blue-600 hover:text-gray-600 hover:bg-gray-100 dark:text-gray-400 dark:bg-gray-800 dark:hover:bg-gray-700">
                            <div class="w-full text-lg font-semibold flex justify-between">
                                <div>
                                    @passenger.FullName
                                </div>
                                @if (ViewBag.childrenSeats[i] != null)
                                {
                                    <div>
                                        @ViewBag.childrenSeats[i].Col-@ViewBag.childrenSeats[i].Row
                                    </div>
                                }
                                else
                                {
                                    <div>
                                        (chưa chọn ghế)
                                    </div>
                                }
                            </div>
                        </label>
                    </li>
                }
            </ul>

            <div class="flex flex-col justify-center">
                @* <ul class="">
                <li class="inline-block">
                <input type="radio" id="khach1" name="khach" value="khach1" class="hidden peer" required checked>
                <label for="khach1"
                class="border-solid border-2 border-primary bg-sky-200 rounded-md p-6 pt-2 -mb-4 inline-block">
                <div class="block">
                <div class="w-full text-lg font-semibold">HN to HCM</div>
                </div>
                </label>
                </li>
                <li class="inline-block">
                <input type="radio" id="khach2" name="khach" value="khach2" class="hidden peer">
                <label for="khach2"
                class="border-solid border-2 border-primar rounded-md p-6 pt-2 -mb-4 inline-block">
                <div class="block">
                <div class="w-full text-lg font-semibold">HCM to Paris</div>
                </div>
                </label>
                </li>
                <li class="inline-block">
                <input type="radio" id="khach2" name="khach" value="khach2" class="hidden peer">
                <label for="khach2"
                class="border-solid border-2 border-primar rounded-md p-6 pt-2 -mb-4 inline-block">
                <div class="block">
                <div class="w-full text-lg font-semibold">HCM to Paris</div>
                </div>
                </label>
                </li>
                <li class="inline-block">
                <input type="radio" id="khach2" name="khach" value="khach2" class="hidden peer">
                <label for="khach2"
                class="border-solid border-2 border-primar rounded-md p-6 pt-2 -mb-4 inline-block">
                <div class="block">
                <div class="w-full text-lg font-semibold">HCM to Paris</div>
                </div>
                </label>
                </li>
                </ul> *@
                @* <div>
                <div class="border-solid border-2 border-primary bg-secondary rounded-md p-6 pt-2 -mb-4 inline-block">
                HN to HCM
                </div>
                <div class="border-solid border-2 border-primary rounded-md p-6 pt-2 -mb-4 inline-block">
                HCM to Paris
                </div>
                </div> *@
                <div
                    class="flex flex-col justify-center border-solid border-2 border-primary rounded-md p-6 inline-block bg-white">
                    <div class="w-full flex justify-around mt-2 text-2xl mb-6">
                        Boing 444
                    </div>
                    <table class="border-spacing-6">
                        <thead>
                            <tr class="text-center">
                                <th></th>
                                @for (var c = 'A'; c < 'A' + seatMap.NoCol; c++)
                                {
                                    <td class="p-6">
                                        @(seatMap.AisleCols.Find(ac => ac.Value == c) == null ? c : "")
                                    </td>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @for (var r = 1; r <= seatMap.NoRow; r++)
                            {
                                SeatModel[] adultSeats = ViewBag.adultSeats;
                                SeatModel[] childrenSeats = ViewBag.childrenSeats;
                                SeatModel[] seats = adultSeats.Concat(childrenSeats).ToArray();

                                <tr class="text-center">
                                    <th class="pr-3">@r</th>

                                    @for (var c = 'A'; c < 'A' + seatMap.NoCol; c++)
                                    {
                                        var seat = seatMap.Seats.Find(s => s.Col == c && s.Row == r);
                                        bool isWaitingSeat = Array.Find<SeatModel>(seats, s => s != null && seat != null &&
                                        s.SeatId
                                        == seat.Id) != null;

                                        <td class="p-2">
                                            @if (seat != null && !isWaitingSeat)
                                            {
                                                <button name="SeatId" value="@seat.Id"
                                                    class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10 hover:ring-4 hover:ring-green-800">
                                                    @c-@r
                                                </button>
                                            }
                                        </td>
                                    }
                                    @* <td class="p-2">
                                <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                                </div>
                                </td>
                                <td class="p-2">
                                </td>
                                <td class="p-2">
                                <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                                </div>
                                </td>
                                <td class="p-2">
                                <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                                </div>
                                </td>
                                <td class="p-2">
                                </td>
                                <td class="p-2">
                                <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                                </div>
                                </td>
                                <td class="p-2">
                                <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                                </div>
                                </td> *@
                                </tr>
                            }
                            @* <tr class="text-center">
                            <th class="pr-3">1</th>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            </tr>
                            <tr class="text-center">
                            <th class="pr-3">1</th>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            <td class="p-2">
                            <div class="border border-gray-100 bg-green-300 rounded-md w-12 h-10 leading-10">test
                            </div>
                            </td>
                            </tr> *@
                        </tbody>
                    </table>
                </div>
            </div>

        </div>
        <div class=" mx-auto max-w-2xl mb-20">
            <div class="mt-6 flex items-center justify-center gap-x-20">
                <button type="button" class="text-sm font-semibold leading-6 text-gray-900">
                    <i class="fa-solid fa-arrow-left"></i>
                    Quay lại
                </button>
                <button type="submit" name="action" value="next"
                    class="rounded-md bg-primary px-5 py-3 text-sm font-semibold text-white shadow-sm hover:bg-secondary focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-secondary">
                    Tiếp tục
                </button>
            </div>
        </div>
    </div>
</form>

<script>
    function choosePassengerHanlder(type, index) {
        @* console.log(type, index) *@
        document.querySelector('input#PassengerType').value = type
        document.querySelector('input#PassengerIndex').value = index
    }
</script>