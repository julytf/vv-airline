// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vv_airline.Models.Data;

#nullable disable

namespace vv_airline.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingService", b =>
                {
                    b.Property<long>("BookingId")
                        .HasColumnType("bigint")
                        .HasColumnName("booking_id");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("service_name")
                        .IsFixedLength();

                    b.HasKey("BookingId", "ServiceName")
                        .HasName("PK__booking___C94B4842E286A9C8");

                    b.HasIndex(new[] { "ServiceName" }, "IX_booking_service_service_name");

                    b.ToTable("booking_service", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("vv_airline.Models.Data.Aircraft", b =>
                {
                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("registration_number");

                    b.Property<long?>("ModelId")
                        .HasColumnType("bigint")
                        .HasColumnName("model_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("RegistrationNumber")
                        .HasName("PK__aircraft__125DB2A2E604A408");

                    b.HasIndex(new[] { "ModelId" }, "IX_Aircrafts_model_id");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Airport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("DistrictCode")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("district_code");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longtitude")
                        .HasColumnType("float")
                        .HasColumnName("longtitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("province_code");

                    b.Property<string>("WardCode")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ward_code");

                    b.HasKey("Id")
                        .HasName("PK__airport__3213E83FBD0BFB0E");

                    b.HasIndex(new[] { "DistrictCode" }, "IX_Airports_district_code");

                    b.HasIndex(new[] { "ProvinceCode" }, "IX_Airports_province_code");

                    b.HasIndex(new[] { "WardCode" }, "IX_Airports_ward_code");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("vv_airline.Models.Data.AisleCol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ModelId")
                        .HasColumnType("bigint")
                        .HasColumnName("model_id");

                    b.Property<byte>("Value")
                        .HasColumnType("tinyint")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PK__aisle_co__3213E83F3B06808E");

                    b.HasIndex(new[] { "ModelId" }, "aisle_col_index_1");

                    b.ToTable("AisleCols");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Booking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("Adults")
                        .HasColumnType("tinyint")
                        .HasColumnName("adults");

                    b.Property<byte?>("Children")
                        .HasColumnType("tinyint")
                        .HasColumnName("children");

                    b.Property<bool?>("IsRoundtrip")
                        .HasColumnType("bit")
                        .HasColumnName("is_roundtrip");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("total_price");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__booking__3213E83F278586E2");

                    b.HasIndex(new[] { "UserId" }, "IX_Bookings_user_id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Config", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("key")
                        .IsFixedLength();

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("value");

                    b.HasKey("Key")
                        .HasName("PK__configs__DFD83CAE40CE0AED");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("vv_airline.Models.Data.District", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("code");

                    b.Property<string>("CodeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code_name");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("FullNameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name_en");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("NameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_en");

                    b.Property<string>("ProvinceCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("province_code");

                    b.HasKey("Code")
                        .HasName("districts_pkey");

                    b.HasIndex(new[] { "ProvinceCode" }, "idx_districts_province");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("vv_airline.Models.Data.ExitRow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ModelId")
                        .HasColumnType("bigint")
                        .HasColumnName("model_id");

                    b.Property<byte>("Value")
                        .HasColumnType("tinyint")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PK__exit_row__3213E83F21867537");

                    b.HasIndex(new[] { "ModelId" }, "exit_row_index_0");

                    b.ToTable("ExitRows");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Flight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AircraftRegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("aircraft_registration_number");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime")
                        .HasColumnName("arrival_time");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime")
                        .HasColumnName("departure_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<long>("RouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("route_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__flight__3213E83F67464E02");

                    b.HasIndex(new[] { "AircraftRegistrationNumber" }, "IX_Flights_aircraft_registration_number");

                    b.HasIndex(new[] { "RouteId" }, "IX_Flights_route_id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("vv_airline.Models.Data.FlightSchedule", b =>
                {
                    b.Property<long>("FlightId")
                        .HasColumnType("bigint")
                        .HasColumnName("flight_id");

                    b.Property<long>("ScheduleId")
                        .HasColumnType("bigint")
                        .HasColumnName("schedule_id");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.HasKey("FlightId", "ScheduleId")
                        .HasName("PK__flight_s__0F36FFC35870B195");

                    b.HasIndex(new[] { "ScheduleId" }, "IX_Flight_Schedule_schedule_id");

                    b.ToTable("FlightSchedules");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__model__3213E83F64857539");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Passenger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BookingId")
                        .HasColumnType("bigint")
                        .HasColumnName("booking_id");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__passenge__3213E83FC1DFDF90");

                    b.HasIndex(new[] { "BookingId" }, "IX_Passengers_booking_id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("RouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("route_id");

                    b.Property<long>("SeatClassId")
                        .HasColumnType("bigint")
                        .HasColumnName("seat_class_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PK__price__3213E83FA4A40A38");

                    b.HasIndex(new[] { "RouteId" }, "IX_Prices_route_id");

                    b.HasIndex(new[] { "SeatClassId" }, "IX_Prices_seat_class_id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Province", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("code");

                    b.Property<string>("CodeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code_name");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("FullNameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name_en");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("NameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_en");

                    b.HasKey("Code")
                        .HasName("provinces_pkey");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Route", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DepartureAirport")
                        .HasColumnType("bigint")
                        .HasColumnName("departure_airport");

                    b.Property<long>("DestinationAirport")
                        .HasColumnType("bigint")
                        .HasColumnName("destination_airport");

                    b.Property<long?>("Distance")
                        .HasColumnType("bigint")
                        .HasColumnName("distance");

                    b.HasKey("Id")
                        .HasName("PK__route__3213E83F3EC1E94B");

                    b.HasIndex(new[] { "DepartureAirport" }, "IX_Routes_departure_airport");

                    b.HasIndex(new[] { "DestinationAirport" }, "IX_Routes_destination_airport");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Schedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime")
                        .HasColumnName("arrival_time");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime")
                        .HasColumnName("departure_time");

                    b.Property<long?>("Distance")
                        .HasColumnType("bigint")
                        .HasColumnName("distance");

                    b.Property<bool?>("HasTransit")
                        .HasColumnType("bit")
                        .HasColumnName("has_transit");

                    b.Property<long>("RouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("route_id");

                    b.HasKey("Id")
                        .HasName("PK__schedule__3213E83F003A11A8");

                    b.HasIndex(new[] { "RouteId" }, "IX_Schedules_route_id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("vv_airline.Models.Data.ScheduleBooking", b =>
                {
                    b.Property<long>("ScheduleId")
                        .HasColumnType("bigint")
                        .HasColumnName("schedule_id");

                    b.Property<long>("BookingId")
                        .HasColumnType("bigint")
                        .HasColumnName("booking_id");

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint")
                        .HasColumnName("index");

                    b.HasKey("ScheduleId", "BookingId")
                        .HasName("PK__schedule__C1B4B034C4B7CC2E");

                    b.HasIndex(new[] { "BookingId" }, "IX_Schedule_Booking_booking_id");

                    b.ToTable("ScheduleBookings");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Seat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("Col")
                        .HasColumnType("tinyint")
                        .HasColumnName("col");

                    b.Property<long>("ModelId")
                        .HasColumnType("bigint")
                        .HasColumnName("model_id");

                    b.Property<byte>("Row")
                        .HasColumnType("tinyint")
                        .HasColumnName("row");

                    b.Property<long>("SeatClassId")
                        .HasColumnType("bigint")
                        .HasColumnName("seat_class_id");

                    b.Property<long?>("SeatTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("seat_type_id");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("status")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK__seat__3213E83F7530C246");

                    b.HasIndex(new[] { "ModelId" }, "IX_Seat_model_id");

                    b.HasIndex(new[] { "SeatClassId" }, "IX_Seat_seat_class_id");

                    b.HasIndex(new[] { "SeatTypeId" }, "IX_Seat_seat_type_id");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("vv_airline.Models.Data.SeatClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__seat_cla__3213E83FD5D1D927");

                    b.ToTable("SeatClasses");
                });

            modelBuilder.Entity("vv_airline.Models.Data.SeatMap", b =>
                {
                    b.Property<long>("ModelId")
                        .HasColumnType("bigint")
                        .HasColumnName("model_id");

                    b.Property<byte>("NoCol")
                        .HasColumnType("tinyint")
                        .HasColumnName("no_col");

                    b.Property<byte>("NoRow")
                        .HasColumnType("tinyint")
                        .HasColumnName("no_row");

                    b.HasKey("ModelId")
                        .HasName("PK__seat_map__DC39CAF467886AEF");

                    b.ToTable("SeatMaps");
                });

            modelBuilder.Entity("vv_airline.Models.Data.SeatType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<long?>("Surcharge")
                        .HasColumnType("bigint")
                        .HasColumnName("surcharge");

                    b.HasKey("Id")
                        .HasName("PK__seat_typ__3213E83F4BEA9166");

                    b.ToTable("SeatTypes");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Service", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("name")
                        .IsFixedLength();

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("price");

                    b.HasKey("Name")
                        .HasName("PK__service__72E12F1A07F61963");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FlightId")
                        .HasColumnType("bigint")
                        .HasColumnName("flight_id");

                    b.Property<long>("PassengerId")
                        .HasColumnType("bigint")
                        .HasColumnName("passenger_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("price");

                    b.Property<long>("SeatId")
                        .HasColumnType("bigint")
                        .HasColumnName("seat_id");

                    b.HasKey("Id")
                        .HasName("PK__ticket__3213E83FB53CA3F1");

                    b.HasIndex(new[] { "FlightId" }, "IX_Tickets_flight_id");

                    b.HasIndex(new[] { "PassengerId" }, "IX_Tickets_passenger_id");

                    b.HasIndex(new[] { "SeatId" }, "IX_Tickets_seat_id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("vv_airline.Models.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Address2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("DistrictCode")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("district_id");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("id_number")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("province_id");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("WardCode")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ward_id");

                    b.HasKey("Id")
                        .HasName("PK__user__3213E83F778C8393");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "DistrictCode" }, "IX_Users_district_code");

                    b.HasIndex(new[] { "ProvinceCode" }, "IX_Users_province_code");

                    b.HasIndex(new[] { "WardCode" }, "IX_Users_ward_code");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex1")
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("vv_airline.Models.Data.Ward", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("code");

                    b.Property<string>("CodeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code_name");

                    b.Property<string>("DistrictCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("district_code");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("FullNameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name_en");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("NameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_en");

                    b.HasKey("Code")
                        .HasName("wards_pkey");

                    b.HasIndex(new[] { "DistrictCode" }, "idx_wards_district");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("BookingService", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Booking", null)
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__booking_s__booki__01142BA1");

                    b.HasOne("vv_airline.Models.Data.Service", null)
                        .WithMany()
                        .HasForeignKey("ServiceName")
                        .IsRequired()
                        .HasConstraintName("FK__booking_s__servi__02084FDA");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("vv_airline.Models.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("vv_airline.Models.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vv_airline.Models.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("vv_airline.Models.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("vv_airline.Models.Data.Aircraft", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Model", "Model")
                        .WithMany("Aircraft")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK__aircraft__model___68487DD7");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Airport", b =>
                {
                    b.HasOne("vv_airline.Models.Data.District", "District")
                        .WithMany("Airports")
                        .HasForeignKey("DistrictCode")
                        .HasConstraintName("FK__airport__distric__787EE5A0");

                    b.HasOne("vv_airline.Models.Data.Province", "Province")
                        .WithMany("Airports")
                        .HasForeignKey("ProvinceCode")
                        .HasConstraintName("FK__airport__province_id__778AC167");

                    b.HasOne("vv_airline.Models.Data.Ward", "Ward")
                        .WithMany("Airports")
                        .HasForeignKey("WardCode")
                        .HasConstraintName("FK__airport__ward_id__797309D9");

                    b.Navigation("District");

                    b.Navigation("Province");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("vv_airline.Models.Data.AisleCol", b =>
                {
                    b.HasOne("vv_airline.Models.Data.SeatMap", "Model")
                        .WithMany("AisleCols")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__aisle_col__model__6B24EA82");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Booking", b =>
                {
                    b.HasOne("vv_airline.Models.Data.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__booking__user_id__7D439ABD");

                    b.Navigation("User");
                });

            modelBuilder.Entity("vv_airline.Models.Data.District", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Province", "ProvinceCodeNavigation")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceCode")
                        .HasConstraintName("districts_province_code_fkey");

                    b.Navigation("ProvinceCodeNavigation");
                });

            modelBuilder.Entity("vv_airline.Models.Data.ExitRow", b =>
                {
                    b.HasOne("vv_airline.Models.Data.SeatMap", "Model")
                        .WithMany("ExitRows")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__exit_row__model___6A30C649");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Flight", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Aircraft", "AircraftRegistrationNumberNavigation")
                        .WithMany("Flights")
                        .HasForeignKey("AircraftRegistrationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__flight__aircraft__72C60C4A");

                    b.HasOne("vv_airline.Models.Data.Route", "Route")
                        .WithMany("Flights")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__flight__route_id__73BA3083");

                    b.Navigation("AircraftRegistrationNumberNavigation");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("vv_airline.Models.Data.FlightSchedule", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Flight", "Flight")
                        .WithMany("FlightSchedules")
                        .HasForeignKey("FlightId")
                        .IsRequired()
                        .HasConstraintName("FK__flight_sc__fligh__75A278F5");

                    b.HasOne("vv_airline.Models.Data.Schedule", "Schedule")
                        .WithMany("FlightSchedules")
                        .HasForeignKey("ScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__flight_sc__sched__76969D2E");

                    b.Navigation("Flight");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Passenger", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Booking", "Booking")
                        .WithMany("Passengers")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__passenger__booki__00200768");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Price", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Route", "Route")
                        .WithMany("Prices")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__price__route_id__71D1E811");

                    b.HasOne("vv_airline.Models.Data.SeatClass", "SeatClass")
                        .WithMany("Prices")
                        .HasForeignKey("SeatClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__price__seat_clas__70DDC3D8");

                    b.Navigation("Route");

                    b.Navigation("SeatClass");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Route", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Airport", "DepartureAirportNavigation")
                        .WithMany("RouteDepartureAirportNavigations")
                        .HasForeignKey("DepartureAirport")
                        .IsRequired()
                        .HasConstraintName("FK__route__departure__6EF57B66");

                    b.HasOne("vv_airline.Models.Data.Airport", "DestinationAirportNavigation")
                        .WithMany("RouteDestinationAirportNavigations")
                        .HasForeignKey("DestinationAirport")
                        .IsRequired()
                        .HasConstraintName("FK__route__destinati__6FE99F9F");

                    b.Navigation("DepartureAirportNavigation");

                    b.Navigation("DestinationAirportNavigation");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Schedule", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Route", "Route")
                        .WithMany("Schedules")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__schedule__route___74AE54BC");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("vv_airline.Models.Data.ScheduleBooking", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Booking", "Booking")
                        .WithMany("ScheduleBookings")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__schedule___booki__7F2BE32F");

                    b.HasOne("vv_airline.Models.Data.Schedule", "Schedule")
                        .WithMany("ScheduleBookings")
                        .HasForeignKey("ScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__schedule___sched__7E37BEF6");

                    b.Navigation("Booking");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Seat", b =>
                {
                    b.HasOne("vv_airline.Models.Data.SeatMap", "Model")
                        .WithMany("Seats")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__seat__model_id__6C190EBB");

                    b.HasOne("vv_airline.Models.Data.SeatClass", "SeatClass")
                        .WithMany("Seats")
                        .HasForeignKey("SeatClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__seat__seat_class__6D0D32F4");

                    b.HasOne("vv_airline.Models.Data.SeatType", "SeatType")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeId")
                        .HasConstraintName("FK__seat__seat_type___6E01572D");

                    b.Navigation("Model");

                    b.Navigation("SeatClass");

                    b.Navigation("SeatType");
                });

            modelBuilder.Entity("vv_airline.Models.Data.SeatMap", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Model", "Model")
                        .WithOne("SeatMap")
                        .HasForeignKey("vv_airline.Models.Data.SeatMap", "ModelId")
                        .IsRequired()
                        .HasConstraintName("FK__seat_map__model___693CA210");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Ticket", b =>
                {
                    b.HasOne("vv_airline.Models.Data.Flight", "Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ticket__flight_i__7A672E12");

                    b.HasOne("vv_airline.Models.Data.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ticket__passenge__7C4F7684");

                    b.HasOne("vv_airline.Models.Data.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ticket__seat_id__7B5B524B");

                    b.Navigation("Flight");

                    b.Navigation("Passenger");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("vv_airline.Models.Data.User", b =>
                {
                    b.HasOne("vv_airline.Models.Data.District", "District")
                        .WithMany("Users")
                        .HasForeignKey("DistrictCode")
                        .HasConstraintName("FK__user__district_i__66603565");

                    b.HasOne("vv_airline.Models.Data.Province", "Province")
                        .WithMany("Users")
                        .HasForeignKey("ProvinceCode")
                        .HasConstraintName("FK__user__province_id__656C112C");

                    b.HasOne("vv_airline.Models.Data.Ward", "Ward")
                        .WithMany("Users")
                        .HasForeignKey("WardCode")
                        .HasConstraintName("FK__user__ward_id__6754599E");

                    b.Navigation("District");

                    b.Navigation("Province");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Ward", b =>
                {
                    b.HasOne("vv_airline.Models.Data.District", "DistrictCodeNavigation")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictCode")
                        .HasConstraintName("wards_district_code_fkey");

                    b.Navigation("DistrictCodeNavigation");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Aircraft", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Airport", b =>
                {
                    b.Navigation("RouteDepartureAirportNavigations");

                    b.Navigation("RouteDestinationAirportNavigations");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Booking", b =>
                {
                    b.Navigation("Passengers");

                    b.Navigation("ScheduleBookings");
                });

            modelBuilder.Entity("vv_airline.Models.Data.District", b =>
                {
                    b.Navigation("Airports");

                    b.Navigation("Users");

                    b.Navigation("Wards");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Flight", b =>
                {
                    b.Navigation("FlightSchedules");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Model", b =>
                {
                    b.Navigation("Aircraft");

                    b.Navigation("SeatMap");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Province", b =>
                {
                    b.Navigation("Airports");

                    b.Navigation("Districts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Route", b =>
                {
                    b.Navigation("Flights");

                    b.Navigation("Prices");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Schedule", b =>
                {
                    b.Navigation("FlightSchedules");

                    b.Navigation("ScheduleBookings");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("vv_airline.Models.Data.SeatClass", b =>
                {
                    b.Navigation("Prices");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("vv_airline.Models.Data.SeatMap", b =>
                {
                    b.Navigation("AisleCols");

                    b.Navigation("ExitRows");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("vv_airline.Models.Data.SeatType", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("vv_airline.Models.Data.User", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("vv_airline.Models.Data.Ward", b =>
                {
                    b.Navigation("Airports");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
